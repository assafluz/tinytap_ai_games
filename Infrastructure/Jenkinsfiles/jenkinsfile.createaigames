pipeline {
    agent any

    environment {
        GIT_USER = 'assafluz'
        GIT_EMAIL = 'assaf@tinytap.com'
        GITHUB_TOKEN = credentials('git_token')
        REPO_URL = 'https://github.com/assafluz/tinytap_ai_games.git'
        BRANCH_NAME = 'main'
    }

    stages {
        stage('Git Pull from origin/main') {
            steps {
                script {
                    sh "git checkout ${BRANCH_NAME}"
                    sh "git pull origin ${BRANCH_NAME}"
                }
            }
        }

        stage('TinyTap production create ai games') {
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    sh '/Library/Frameworks/Python.framework/Versions/3.9/bin/python3 -m pytest test_ai_creator/create_ai_game.py::TestCreateAiGame::test_create_ai_game'
                }
            }
        }

        stage('Commit and Push index.html to Git') {
            steps {
                script {
                    // Set Git User Info
                    sh "git config user.name ${GIT_USER}"
                    sh "git config user.email ${GIT_EMAIL}"

                    // Check if there are changes to commit
                    def has_changes = sh(script: 'git diff --cached --exit-code --quiet', returnStatus: true)

                    if (has_changes != 0) {
                        // Add and commit changes
                        sh "git add index.html"
                        sh "git commit -m 'Update index.html from Jenkins'"

                        // Ensure we have the correct remote URL
                        sh "git remote set-url origin ${REPO_URL}"

                        // Push using token for authentication
                        withCredentials([string(credentialsId: 'git_token', variable: 'GITHUB_TOKEN')]) {
                            sh """git push https://${GIT_USER}:${GITHUB_TOKEN}@${REPO_URL.split('https://')[1]} ${BRANCH_NAME}:${BRANCH_NAME}"""
                        }
                    } else {
                        echo "No changes to commit and push."
                    }
                }
            }
        }
    }
}
