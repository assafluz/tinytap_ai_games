pipeline {
    agent any

    environment {
        GIT_USER = 'assafluz'
        GIT_EMAIL = 'assaf@tinytap.com'
        GITHUB_TOKEN = credentials('git_token')
        REPO_URL = 'https://github.com/assafluz/tinytap_ai_games.git'
        BRANCH_NAME = 'main'
    }

    stages {
        stage('Set Up Environment') {
            steps {
                script {
                    sh 'python3 --version'
                    echo 'Setting up environment...'
                    // Additional setup if required
                }
            }
        }

        stage('Run AI Game Creation Tests') {
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    // Run your Python script
                    sh 'python3 -m unittest test_ai_creator.create_ai_game.TestCreateAiGame'
                }
            }
        }

        stage('Git Operations') {
            steps {
                script {
                    sh "git stash"
                    sh "git config user.name '${GIT_USER}'"
                    sh "git config user.email '${GIT_EMAIL}'"
                    sh "git checkout ${BRANCH_NAME}"
                    sh "git pull --rebase origin ${BRANCH_NAME}"
                }
            }
        }

        stage('Commit and Push Changes') {
            steps {
                script {
                    // Add all changes to the staging area
                    sh "git add ."

                    // Commit changes with a custom message
                    sh "git commit -m 'Update index.html with AI game results' || echo 'No changes to commit'"

                    // Push the changes
                    withCredentials([string(credentialsId: 'git_token', variable: 'GITHUB_TOKEN')]) {
                        sh "git push ${REPO_URL.substring(0, 8)}${GIT_USER}:${GITHUB_TOKEN}@${REPO_URL.substring(8)} ${BRANCH_NAME}"
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution has completed.'
            // Any additional post-execution steps
        }
    }
}
