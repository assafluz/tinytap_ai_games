pipeline {
    agent any

    environment {
        GIT_USER = 'assafluz'
        GIT_EMAIL = 'assaf@tinytap.com'
        GITHUB_TOKEN = credentials('git_token')
        REPO_URL = 'https://github.com/assafluz/tinytap_ai_games.git'
        BRANCH_NAME = 'main'
    }

    stages {
        stage('TinyTap staging create ai games') {
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    sh '/Library/Frameworks/Python.framework/Versions/3.9/bin/python3 -m pytest test_ai_creator/create_ai_game.py::TestCreateAiGame::test_create_ai_game'
                }
            }
        }

        stage('Push index.html to Git') {
            when {
                expression { currentBuild.resultIsBetterOrEqualTo('SUCCESS') }
            }
            steps {
                script {
                    // Set Git User Info
                    sh "git config user.name ${GIT_USER}"
                    sh "git config user.email ${GIT_EMAIL}"

                    // Stash untracked files
                    sh "git stash --include-untracked"

                    // Checkout the main branch
                    sh "git checkout ${BRANCH_NAME}"

                    // Pull the latest changes from remote
                    sh "git pull origin ${BRANCH_NAME}"

                    // Apply the stashed changes
                    sh "git stash apply"

                    // Add and commit changes
                    sh "git add index.html"
                    sh "git commit -m 'Update index.html from Jenkins'"

                    // Ensure we have the correct remote URL
                    sh "git remote set-url origin ${REPO_URL}"

                    // Push using token for authentication
                    withCredentials([string(credentialsId: 'git_token', variable: 'GITHUB_TOKEN')]) {
                        sh """git push https://${GIT_USER}:${GITHUB_TOKEN}@${REPO_URL.split('https://')[1]} ${BRANCH_NAME}:${BRANCH_NAME}"""
                    }
                }
            }
        }
    }
}
